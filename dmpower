#!/usr/bin/env bash
# Define LOCKER in .xprofile to set to different LOCKER program
# LOCKER="${LOCKER:-lock}"
LOCKER="$HOME/.local/bin/dmscripts/dmlock"
# LOCKER="xscreensaver-command -lock"

# use notify-send if run in dumb term
OUTPUT="echo"
if [[ ${TERM} == 'dumb' ]]; then
    OUTPUT="notify-send"
fi

yesno(){
    # shellcheck disable=SC2005
    echo "$(echo -e "No\nYes" | rofi -dmenu -i -p "${1}")"
}

declare -a MANAGERS=(
    "awesome"
    "bspwm"
    "dwm"
    "spectrwm"
    "xmonad"
    "qtile"
)

dmenu_prompt="Shutdown menu"

declare -a options=(
    "Suspend"
    "Reboot"
    "Shutdown"
    "Logout"
    "Lock screen"
    "Reboot to Windows"
    "Quit"
)

execute_choice () {
    if [[ $1 == 'lock' ]]; then ${LOCKER}
    elif [[ $1 == 'reboot' ]]; then systemctl reboot
    elif [[ $1 == 'windows' ]]; then sudo $HOME/.local/bin/winreboot
    elif [[ $1 == 'poweroff' ]]; then systemctl poweroff
    elif [[ $1 == 'suspend' ]]; then systemctl suspend
    elif [[ $1 == 'quit' ]]; then ${OUTPUT} "Program terminated." && exit 0
    else ${OUTPUT} "Program terminated." && exit 0
    fi
}

if [ ! $# -eq 0 ]; then execute_choice $1

else
    choice=$(printf '%s\n' "${options[@]}" | rofi -dmenu -i -p "${dmenu_prompt}")
fi

case $choice in
    'Logout')
        if [[ $(yesno "Logout?") == "Yes" ]]; then
            for manager in "${MANAGERS[@]}"; do
                killall "${manager}" || ${OUTPUT} "Process ${manager} was not running."
            done
        else
            ${OUTPUT} "User chose not to logout." && exit 1
        fi
        ;;
    'Lock screen') execute_choice lock ;;
    'Reboot')
        if [[ $(yesno "Reboot?") == "Yes" ]]; then
            execute_choice reboot
        else
            ${OUTPUT} "User chose not to reboot." && exit 0
        fi
        ;;
    'Reboot to Windows')
        if [[ $(yesno "Reboot?") == "Yes" ]]; then
            execute_choice windows
        else
            ${OUTPUT} "User chose not to reboot." && exit 0
        fi
        ;;
    'Shutdown')
        if [[ $(yesno "Shutdown?") == "Yes" ]]; then
            execute_choice poweroff
        else
            ${OUTPUT} "User chose not to shutdown." && exit 0
        fi
        ;;
    'Suspend')
        if [[ $(yesno "Suspend?") == "Yes" ]]; then
            execute_choice suspend
        else
            ${OUTPUT} "User chose not to suspend." && exit 0
        fi
        ;;
    'Quit') execute_choice quit ;;
    # It is a common practice to use the wildcard asterisk symbol (*) as a final
    # pattern to define the default case. This pattern will always match.
    *)
        exit 0
        ;;
esac
